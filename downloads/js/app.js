// Generated by CoffeeScript 1.4.0
(function() {

  require.config({
    paths: {
      "jquery": "//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min"
    },
    shim: {
      "jquery.timeago": {
        "deps": ["jquery"]
      },
      "jquery.client": {
        "deps": ["jquery"]
      },
      "jquery.popover": {
        "deps": ["jquery"]
      }
    }
  });

  require(['jquery', 'mustache', 'text!data.json', 'text!templates/download.html', 'text!templates/build_list.html', 'jquery.timeago', 'jquery.client'], function($, Mustache, jsonData, downloadTemplate, buildListTemplate) {
    var build, builds, buildsListHTML, download, downloadsHTML, _i, _len, _ref;
    builds = {
      list: JSON.parse(jsonData)
    };
    _ref = builds.list;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      build = _ref[_i];
      build.date = $.timeago(new Date(build.date));
    }
    switch ($.client.os) {
      case "Mac":
      case "Windows":
      case "Win":
        download = {
          sprint: builds.list[0].sprint,
          date: builds.list[0].date,
          notes: builds.list[0].notes,
          os: $.client.os,
          url: builds.list[0].links[$.client.os].url,
          filetype: builds.list[0].links[$.client.os].filetype,
          filename: builds.list[0].links[$.client.os].filename,
          filesize: builds.list[0].links[$.client.os].filesize
        };
        downloadsHTML = Mustache.render(downloadTemplate, download);
        $('#content header').append(downloadsHTML);
        buildsListHTML = Mustache.render(buildListTemplate, builds);
        $('#downloads-list').html(buildsListHTML);
        $('html').click(function() {
          return $('#downloads-list').removeClass('show');
        });
        $('#content a.other').click(function(event) {
          $('#downloads-list').toggleClass('show');
          event.stopPropagation();
          return false;
        });
        return $('#downloads-list').click(function(event) {
          event.stopPropagation();
          return false;
        });
      default:
        return console.log('other');
    }
  });

}).call(this);
